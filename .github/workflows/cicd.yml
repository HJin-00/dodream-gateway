name: Java CI/CD for Single Service

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      SERVICE_NAME: gateway #← JAR 이름 (finalName)

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v3

      - name: ☕ Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: 🛠️ Build with Maven
        run: mvn -B clean package -DskipTests

      - name: 🔍 Health Check in PR (Config Server 사용, Eureka 제외)
        if: github.event_name == 'pull_request'
        env: # ← expression 을 env 로 빼면 보기 편해요
          CFG_URI: ${{ secrets.CFG_URI }}
        run: |
          echo "🚀 PR 환경에서 Config Server로 prod 설정 받아 헬스체크"
          java -Dserver.port=9999 \
               -Dspring.cloud.discovery.enabled=false \
               "-Dspring.config.import=optional:configserver:${CFG_URI}" \
               -Dspring.profiles.active=prod \
               -jar target/${SERVICE_NAME}.jar &

          PID=$!

          MAX_RETRIES=10
          SLEEP_INTERVAL=1
          echo "⏳ Health check 시작: 최대 ${MAX_RETRIES}초까지 대기"

          for i in $(seq 1 $MAX_RETRIES); do
            if curl --fail --silent http://localhost:9999/actuator/health; then
              echo "✅ Health check 성공"
              kill $PID
              wait $PID || true
              exit 0
            fi
            echo "⏱️ 시도 $i 실패... $SLEEP_INTERVAL초 후 재시도"
            sleep $SLEEP_INTERVAL
          done

          echo "❌ Health check 실패"
          kill $PID
          wait $PID || true
          exit 1

      - name: 💾 백업 기존 JAR on Remote
        if: github.event_name == 'push'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_IP }}
          username: ${{ secrets.SSH_ID }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            SERVICE_NAME=${{ env.SERVICE_NAME }}
            JAR_PATH=~/target/${SERVICE_NAME}.jar
            BACKUP_PATH=~/backup_jars/${SERVICE_NAME}.jar.bak
            mkdir -p ~/backup_jars
            if [ -f "$JAR_PATH" ]; then
              cp "$JAR_PATH" "$BACKUP_PATH"
              echo "✅ 백업 완료: $BACKUP_PATH"
            else
              echo "⚠️ 백업 생략: $JAR_PATH 없음"
            fi

      - name: 🚚 Upload JAR to Remote
        if: github.event_name == 'push'
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_IP }}
          username: ${{ secrets.SSH_ID }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "target/${{ env.SERVICE_NAME }}.jar"
          target: "~/target"
          rm: false

      - name: 🚀 Execute startup.sh on Remote
        if: github.event_name == 'push'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_IP }}
          username: ${{ secrets.SSH_ID }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: "~/startup.sh ${{ env.SERVICE_NAME }}"
